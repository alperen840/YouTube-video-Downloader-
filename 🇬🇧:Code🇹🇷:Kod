from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.label import Label
from kivy.uix.popup import Popup
from threading import Thread
from pytube import YouTube

class LanguagePopup(Popup):
    def __init__(self, set_language_callback, **kwargs):
        super(LanguagePopup, self).__init__(**kwargs)
        self.title = "Select Language / Dil Seç"
        self.size_hint = (0.8, 0.5)

        box = BoxLayout(orientation='vertical', spacing=10, padding=10)
        box.add_widget(Label(text="Choose your language:\nDil seçin:", font_size=20))

        btn_tr = Button(text="🇹🇷 Türkçe", size_hint_y=None, height=50, background_color=(0, 0.6, 0, 1))
        btn_en = Button(text="🇬🇧 English", size_hint_y=None, height=50, background_color=(0, 0, 0.7, 1))
        btn_tr.bind(on_press=lambda x: self.select_language('tr', set_language_callback))
        btn_en.bind(on_press=lambda x: self.select_language('en', set_language_callback))

        box.add_widget(btn_tr)
        box.add_widget(btn_en)
        self.content = box

    def select_language(self, lang, callback):
        callback(lang)
        self.dismiss()

class YouTubeDownloader(BoxLayout):
    def __init__(self, language, **kwargs):
        super(YouTubeDownloader, self).__init__(orientation='vertical', spacing=15, padding=20, **kwargs)
        self.language = language

        self.labels = {
            'tr': {
                'title': "📥 YouTube İndirici",
                'enter_link': "YouTube Linki Girin:",
                'download': "İNDİR",
                'downloading': "İndiriliyor...",
                'completed': "✅ İndirme tamamlandı! (Download klasörüne kaydedildi)",
                'error': "❌ Hata: "
            },
            'en': {
                'title': "📥 YouTube Downloader",
                'enter_link': "Enter YouTube Link:",
                'download': "DOWNLOAD",
                'downloading': "Downloading...",
                'completed': "✅ Download complete! (Saved to Download folder)",
                'error': "❌ Error: "
            }
        }

        self.add_widget(Label(text=self.labels[self.language]['title'], font_size=28, bold=True))

        self.add_widget(Label(text=self.labels[self.language]['enter_link'], font_size=18))
        self.link_input = TextInput(multiline=False, size_hint_y=None, height=50, font_size=16, background_color=(1,1,1,0.3))
        self.add_widget(self.link_input)

        self.status = Label(text="", font_size=16)
        self.add_widget(self.status)

        self.download_button = Button(
            text=self.labels[self.language]['download'],
            size_hint_y=None,
            height=60,
            background_color=(0.2, 0.6, 1, 1)
        )
        self.download_button.bind(on_press=self.start_download)
        self.add_widget(self.download_button)

    def start_download(self, instance):
        Thread(target=self.download_video).start()

    def download_video(self):
        try:
            url = self.link_input.text.strip()
            self.status.text = self.labels[self.language]['downloading']
            yt = YouTube(url)
            stream = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first()
            stream.download(output_path='/storage/emulated/0/Download')
            self.status.text = self.labels[self.language]['completed']
        except Exception as e:
            self.status.text = f"{self.labels[self.language]['error']} {e}"

class DownloaderApp(App):
    def build(self):
        root = BoxLayout()
        def set_language(lang):
            root.clear_widgets()
            root.add_widget(YouTubeDownloader(lang))
        popup = LanguagePopup(set_language)
        popup.open()
        return root

if __name__ == '__main__':
    DownloaderApp().run()
